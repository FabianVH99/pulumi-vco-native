// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vco.Cloudspace
{
    [VcoResourceType("vco:cloudspace:VirtualMachine")]
    public partial class VirtualMachine : global::Pulumi.CustomResource
    {
        [Output("acronis")]
        public Output<bool?> Acronis { get; private set; } = null!;

        [Output("agent_status")]
        public Output<string> Agent_status { get; private set; } = null!;

        [Output("all_vm_disks")]
        public Output<bool?> All_vm_disks { get; private set; } = null!;

        [Output("anti_affinity_group_ids")]
        public Output<ImmutableArray<string>> Anti_affinity_group_ids { get; private set; } = null!;

        [Output("appliance")]
        public Output<bool> Appliance { get; private set; } = null!;

        [Output("boot_disk_id")]
        public Output<int> Boot_disk_id { get; private set; } = null!;

        [Output("boot_type")]
        public Output<string> Boot_type { get; private set; } = null!;

        [Output("cdrom_id")]
        public Output<int?> Cdrom_id { get; private set; } = null!;

        [Output("cloudspace_id")]
        public Output<string> Cloudspace_id { get; private set; } = null!;

        [Output("cpu_topology")]
        public Output<Outputs.CpuTopology> Cpu_topology { get; private set; } = null!;

        [Output("cpus_pin_status")]
        public Output<bool> Cpus_pin_status { get; private set; } = null!;

        [Output("creation_time")]
        public Output<double> Creation_time { get; private set; } = null!;

        [Output("customerID")]
        public Output<string> CustomerID { get; private set; } = null!;

        [Output("data_disks")]
        public Output<ImmutableArray<int>> Data_disks { get; private set; } = null!;

        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        [Output("disk_size")]
        public Output<int?> Disk_size { get; private set; } = null!;

        [Output("disks")]
        public Output<ImmutableArray<Outputs.VmDisk>> Disks { get; private set; } = null!;

        [Output("enable_vm_agent")]
        public Output<bool?> Enable_vm_agent { get; private set; } = null!;

        [Output("hostname")]
        public Output<string> Hostname { get; private set; } = null!;

        [Output("image_id")]
        public Output<int> Image_id { get; private set; } = null!;

        [Output("impact_alert_hook")]
        public Output<string> Impact_alert_hook { get; private set; } = null!;

        [Output("locked")]
        public Output<bool> Locked { get; private set; } = null!;

        [Output("memory")]
        public Output<int> Memory { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("network_interfaces")]
        public Output<ImmutableArray<Outputs.NetworkInterface>> Network_interfaces { get; private set; } = null!;

        [Output("os_accounts")]
        public Output<ImmutableArray<Outputs.OsAccount>> Os_accounts { get; private set; } = null!;

        [Output("os_image_name")]
        public Output<string> Os_image_name { get; private set; } = null!;

        [Output("os_name")]
        public Output<string?> Os_name { get; private set; } = null!;

        [Output("os_type")]
        public Output<string?> Os_type { get; private set; } = null!;

        [Output("private_ip")]
        public Output<string?> Private_ip { get; private set; } = null!;

        [Output("snapshot_id")]
        public Output<string?> Snapshot_id { get; private set; } = null!;

        [Output("stack_id")]
        public Output<int> Stack_id { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("storage")]
        public Output<int> Storage { get; private set; } = null!;

        [Output("token")]
        public Output<string> Token { get; private set; } = null!;

        [Output("update_time")]
        public Output<double> Update_time { get; private set; } = null!;

        [Output("url")]
        public Output<string> Url { get; private set; } = null!;

        [Output("user_data")]
        public Output<string?> User_data { get; private set; } = null!;

        [Output("vcpus")]
        public Output<int> Vcpus { get; private set; } = null!;

        [Output("vm_id")]
        public Output<int> Vm_id { get; private set; } = null!;


        /// <summary>
        /// Create a VirtualMachine resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VirtualMachine(string name, VirtualMachineArgs args, CustomResourceOptions? options = null)
            : base("vco:cloudspace:VirtualMachine", name, args ?? new VirtualMachineArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VirtualMachine(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("vco:cloudspace:VirtualMachine", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VirtualMachine resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VirtualMachine Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new VirtualMachine(name, id, options);
        }
    }

    public sealed class VirtualMachineArgs : global::Pulumi.ResourceArgs
    {
        [Input("acronis")]
        public Input<bool>? Acronis { get; set; }

        [Input("all_vm_disks")]
        public Input<bool>? All_vm_disks { get; set; }

        [Input("boot_disk_id")]
        public Input<int>? Boot_disk_id { get; set; }

        [Input("boot_type")]
        public Input<string>? Boot_type { get; set; }

        [Input("cdrom_id")]
        public Input<int>? Cdrom_id { get; set; }

        [Input("cloudspace_id", required: true)]
        public Input<string> Cloudspace_id { get; set; } = null!;

        [Input("customerID", required: true)]
        private Input<string>? _customerID;
        public Input<string>? CustomerID
        {
            get => _customerID;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _customerID = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("data_disks")]
        private InputList<int>? _data_disks;
        public InputList<int> Data_disks
        {
            get => _data_disks ?? (_data_disks = new InputList<int>());
            set => _data_disks = value;
        }

        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        [Input("disk_size")]
        public Input<int>? Disk_size { get; set; }

        [Input("enable_vm_agent")]
        public Input<bool>? Enable_vm_agent { get; set; }

        [Input("image_id")]
        public Input<int>? Image_id { get; set; }

        [Input("memory", required: true)]
        public Input<int> Memory { get; set; } = null!;

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("os_name")]
        public Input<string>? Os_name { get; set; }

        [Input("os_type")]
        public Input<string>? Os_type { get; set; }

        [Input("private_ip")]
        public Input<string>? Private_ip { get; set; }

        [Input("snapshot_id")]
        public Input<string>? Snapshot_id { get; set; }

        [Input("token", required: true)]
        private Input<string>? _token;
        public Input<string>? Token
        {
            get => _token;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _token = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("url", required: true)]
        private Input<string>? _url;
        public Input<string>? Url
        {
            get => _url;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _url = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("user_data")]
        public Input<string>? User_data { get; set; }

        [Input("vcpus", required: true)]
        public Input<int> Vcpus { get; set; } = null!;

        public VirtualMachineArgs()
        {
        }
        public static new VirtualMachineArgs Empty => new VirtualMachineArgs();
    }
}
