"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.VirtualMachine = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
class VirtualMachine extends pulumi.CustomResource {
    /**
     * Get an existing VirtualMachine resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new VirtualMachine(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of VirtualMachine.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VirtualMachine.__pulumiType;
    }
    /**
     * Create a VirtualMachine resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.cloudspace_id === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloudspace_id'");
            }
            if ((!args || args.customerID === undefined) && !opts.urn) {
                throw new Error("Missing required property 'customerID'");
            }
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if ((!args || args.memory === undefined) && !opts.urn) {
                throw new Error("Missing required property 'memory'");
            }
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            if ((!args || args.token === undefined) && !opts.urn) {
                throw new Error("Missing required property 'token'");
            }
            if ((!args || args.url === undefined) && !opts.urn) {
                throw new Error("Missing required property 'url'");
            }
            if ((!args || args.vcpus === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vcpus'");
            }
            resourceInputs["acronis"] = args ? args.acronis : undefined;
            resourceInputs["all_vm_disks"] = args ? args.all_vm_disks : undefined;
            resourceInputs["boot_disk_id"] = args ? args.boot_disk_id : undefined;
            resourceInputs["boot_type"] = args ? args.boot_type : undefined;
            resourceInputs["cdrom_id"] = args ? args.cdrom_id : undefined;
            resourceInputs["cloudspace_id"] = args ? args.cloudspace_id : undefined;
            resourceInputs["customerID"] = args ? args.customerID : undefined;
            resourceInputs["data_disks"] = args ? args.data_disks : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["disk_size"] = args ? args.disk_size : undefined;
            resourceInputs["enable_vm_agent"] = args ? args.enable_vm_agent : undefined;
            resourceInputs["image_id"] = args ? args.image_id : undefined;
            resourceInputs["memory"] = args ? args.memory : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["os_name"] = args ? args.os_name : undefined;
            resourceInputs["os_type"] = args ? args.os_type : undefined;
            resourceInputs["private_ip"] = args ? args.private_ip : undefined;
            resourceInputs["snapshot_id"] = args ? args.snapshot_id : undefined;
            resourceInputs["token"] = args ? args.token : undefined;
            resourceInputs["url"] = args ? args.url : undefined;
            resourceInputs["user_data"] = args ? args.user_data : undefined;
            resourceInputs["vcpus"] = args ? args.vcpus : undefined;
            resourceInputs["agent_status"] = undefined /*out*/;
            resourceInputs["anti_affinity_group_ids"] = undefined /*out*/;
            resourceInputs["appliance"] = undefined /*out*/;
            resourceInputs["cpu_topology"] = undefined /*out*/;
            resourceInputs["cpus_pin_status"] = undefined /*out*/;
            resourceInputs["creation_time"] = undefined /*out*/;
            resourceInputs["disks"] = undefined /*out*/;
            resourceInputs["hostname"] = undefined /*out*/;
            resourceInputs["impact_alert_hook"] = undefined /*out*/;
            resourceInputs["locked"] = undefined /*out*/;
            resourceInputs["network_interfaces"] = undefined /*out*/;
            resourceInputs["os_accounts"] = undefined /*out*/;
            resourceInputs["os_image_name"] = undefined /*out*/;
            resourceInputs["stack_id"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["storage"] = undefined /*out*/;
            resourceInputs["update_time"] = undefined /*out*/;
            resourceInputs["vm_id"] = undefined /*out*/;
        }
        else {
            resourceInputs["acronis"] = undefined /*out*/;
            resourceInputs["agent_status"] = undefined /*out*/;
            resourceInputs["all_vm_disks"] = undefined /*out*/;
            resourceInputs["anti_affinity_group_ids"] = undefined /*out*/;
            resourceInputs["appliance"] = undefined /*out*/;
            resourceInputs["boot_disk_id"] = undefined /*out*/;
            resourceInputs["boot_type"] = undefined /*out*/;
            resourceInputs["cdrom_id"] = undefined /*out*/;
            resourceInputs["cloudspace_id"] = undefined /*out*/;
            resourceInputs["cpu_topology"] = undefined /*out*/;
            resourceInputs["cpus_pin_status"] = undefined /*out*/;
            resourceInputs["creation_time"] = undefined /*out*/;
            resourceInputs["customerID"] = undefined /*out*/;
            resourceInputs["data_disks"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["disk_size"] = undefined /*out*/;
            resourceInputs["disks"] = undefined /*out*/;
            resourceInputs["enable_vm_agent"] = undefined /*out*/;
            resourceInputs["hostname"] = undefined /*out*/;
            resourceInputs["image_id"] = undefined /*out*/;
            resourceInputs["impact_alert_hook"] = undefined /*out*/;
            resourceInputs["locked"] = undefined /*out*/;
            resourceInputs["memory"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["network_interfaces"] = undefined /*out*/;
            resourceInputs["os_accounts"] = undefined /*out*/;
            resourceInputs["os_image_name"] = undefined /*out*/;
            resourceInputs["os_name"] = undefined /*out*/;
            resourceInputs["os_type"] = undefined /*out*/;
            resourceInputs["private_ip"] = undefined /*out*/;
            resourceInputs["snapshot_id"] = undefined /*out*/;
            resourceInputs["stack_id"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["storage"] = undefined /*out*/;
            resourceInputs["token"] = undefined /*out*/;
            resourceInputs["update_time"] = undefined /*out*/;
            resourceInputs["url"] = undefined /*out*/;
            resourceInputs["user_data"] = undefined /*out*/;
            resourceInputs["vcpus"] = undefined /*out*/;
            resourceInputs["vm_id"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VirtualMachine.__pulumiType, name, resourceInputs, opts);
    }
}
exports.VirtualMachine = VirtualMachine;
/** @internal */
VirtualMachine.__pulumiType = 'vco:cloudspace:VirtualMachine';
//# sourceMappingURL=virtualMachine.js.map