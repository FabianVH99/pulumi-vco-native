export { AntiAffinityGroupArgs } from "./antiAffinityGroup";
export type AntiAffinityGroup = import("./antiAffinityGroup").AntiAffinityGroup;
export declare const AntiAffinityGroup: typeof import("./antiAffinityGroup").AntiAffinityGroup;
export { AntiAffinityGroupVMArgs } from "./antiAffinityGroupVM";
export type AntiAffinityGroupVM = import("./antiAffinityGroupVM").AntiAffinityGroupVM;
export declare const AntiAffinityGroupVM: typeof import("./antiAffinityGroupVM").AntiAffinityGroupVM;
export { CloudspaceArgs } from "./cloudspace";
export type Cloudspace = import("./cloudspace").Cloudspace;
export declare const Cloudspace: typeof import("./cloudspace").Cloudspace;
export { ConnectedCloudspaceArgs } from "./connectedCloudspace";
export type ConnectedCloudspace = import("./connectedCloudspace").ConnectedCloudspace;
export declare const ConnectedCloudspace: typeof import("./connectedCloudspace").ConnectedCloudspace;
export { DiskArgs } from "./disk";
export type Disk = import("./disk").Disk;
export declare const Disk: typeof import("./disk").Disk;
export { ExposedDiskArgs } from "./exposedDisk";
export type ExposedDisk = import("./exposedDisk").ExposedDisk;
export declare const ExposedDisk: typeof import("./exposedDisk").ExposedDisk;
export { ExternalNetworkArgs } from "./externalNetwork";
export type ExternalNetwork = import("./externalNetwork").ExternalNetwork;
export declare const ExternalNetwork: typeof import("./externalNetwork").ExternalNetwork;
export { HostArgs } from "./host";
export type Host = import("./host").Host;
export declare const Host: typeof import("./host").Host;
export { LoadBalancerArgs } from "./loadBalancer";
export type LoadBalancer = import("./loadBalancer").LoadBalancer;
export declare const LoadBalancer: typeof import("./loadBalancer").LoadBalancer;
export { ObjectSpaceLinkArgs } from "./objectSpaceLink";
export type ObjectSpaceLink = import("./objectSpaceLink").ObjectSpaceLink;
export declare const ObjectSpaceLink: typeof import("./objectSpaceLink").ObjectSpaceLink;
export { PortForwardArgs } from "./portForward";
export type PortForward = import("./portForward").PortForward;
export declare const PortForward: typeof import("./portForward").PortForward;
export { ReverseProxyArgs } from "./reverseProxy";
export type ReverseProxy = import("./reverseProxy").ReverseProxy;
export declare const ReverseProxy: typeof import("./reverseProxy").ReverseProxy;
export { ServerPoolArgs } from "./serverPool";
export type ServerPool = import("./serverPool").ServerPool;
export declare const ServerPool: typeof import("./serverPool").ServerPool;
export { VirtualMachineArgs } from "./virtualMachine";
export type VirtualMachine = import("./virtualMachine").VirtualMachine;
export declare const VirtualMachine: typeof import("./virtualMachine").VirtualMachine;
export { VirtualMachineCDArgs } from "./virtualMachineCD";
export type VirtualMachineCD = import("./virtualMachineCD").VirtualMachineCD;
export declare const VirtualMachineCD: typeof import("./virtualMachineCD").VirtualMachineCD;
export { VirtualMachineDiskArgs } from "./virtualMachineDisk";
export type VirtualMachineDisk = import("./virtualMachineDisk").VirtualMachineDisk;
export declare const VirtualMachineDisk: typeof import("./virtualMachineDisk").VirtualMachineDisk;
export { VirtualMachineNICArgs } from "./virtualMachineNIC";
export type VirtualMachineNIC = import("./virtualMachineNIC").VirtualMachineNIC;
export declare const VirtualMachineNIC: typeof import("./virtualMachineNIC").VirtualMachineNIC;
