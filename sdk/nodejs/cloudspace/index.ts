// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AntiAffinityGroupArgs } from "./antiAffinityGroup";
export type AntiAffinityGroup = import("./antiAffinityGroup").AntiAffinityGroup;
export const AntiAffinityGroup: typeof import("./antiAffinityGroup").AntiAffinityGroup = null as any;
utilities.lazyLoad(exports, ["AntiAffinityGroup"], () => require("./antiAffinityGroup"));

export { ConnectedCloudspaceArgs } from "./connectedCloudspace";
export type ConnectedCloudspace = import("./connectedCloudspace").ConnectedCloudspace;
export const ConnectedCloudspace: typeof import("./connectedCloudspace").ConnectedCloudspace = null as any;
utilities.lazyLoad(exports, ["ConnectedCloudspace"], () => require("./connectedCloudspace"));

export { ExternalNetworkArgs } from "./externalNetwork";
export type ExternalNetwork = import("./externalNetwork").ExternalNetwork;
export const ExternalNetwork: typeof import("./externalNetwork").ExternalNetwork = null as any;
utilities.lazyLoad(exports, ["ExternalNetwork"], () => require("./externalNetwork"));

export { PortForwardArgs } from "./portForward";
export type PortForward = import("./portForward").PortForward;
export const PortForward: typeof import("./portForward").PortForward = null as any;
utilities.lazyLoad(exports, ["PortForward"], () => require("./portForward"));

export { VirtualMachineArgs } from "./virtualMachine";
export type VirtualMachine = import("./virtualMachine").VirtualMachine;
export const VirtualMachine: typeof import("./virtualMachine").VirtualMachine = null as any;
utilities.lazyLoad(exports, ["VirtualMachine"], () => require("./virtualMachine"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "vco:cloudspace:AntiAffinityGroup":
                return new AntiAffinityGroup(name, <any>undefined, { urn })
            case "vco:cloudspace:ConnectedCloudspace":
                return new ConnectedCloudspace(name, <any>undefined, { urn })
            case "vco:cloudspace:ExternalNetwork":
                return new ExternalNetwork(name, <any>undefined, { urn })
            case "vco:cloudspace:PortForward":
                return new PortForward(name, <any>undefined, { urn })
            case "vco:cloudspace:VirtualMachine":
                return new VirtualMachine(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("vco", "cloudspace", _module)
