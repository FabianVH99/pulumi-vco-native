// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class VirtualMachine extends pulumi.CustomResource {
    /**
     * Get an existing VirtualMachine resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): VirtualMachine {
        return new VirtualMachine(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vco:cloudspace:VirtualMachine';

    /**
     * Returns true if the given object is an instance of VirtualMachine.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VirtualMachine {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VirtualMachine.__pulumiType;
    }

    public readonly acronis!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly agent_status!: pulumi.Output<string>;
    public readonly all_vm_disks!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly anti_affinity_group_ids!: pulumi.Output<string[] | undefined>;
    public /*out*/ readonly appliance!: pulumi.Output<boolean>;
    public readonly boot_disk_id!: pulumi.Output<number>;
    public readonly boot_type!: pulumi.Output<string>;
    public readonly cdrom_id!: pulumi.Output<number | undefined>;
    public readonly cloudspace_id!: pulumi.Output<string>;
    public /*out*/ readonly cpu_topology!: pulumi.Output<outputs.cloudspace.CpuTopology>;
    public /*out*/ readonly cpus_pin_status!: pulumi.Output<boolean>;
    public /*out*/ readonly creation_time!: pulumi.Output<number>;
    public readonly customerID!: pulumi.Output<string>;
    public readonly data_disks!: pulumi.Output<number[] | undefined>;
    public readonly description!: pulumi.Output<string>;
    public readonly disk_size!: pulumi.Output<number | undefined>;
    public /*out*/ readonly disks!: pulumi.Output<outputs.cloudspace.VmDisk[]>;
    public readonly enable_vm_agent!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly hostname!: pulumi.Output<string>;
    public readonly image_id!: pulumi.Output<number>;
    public /*out*/ readonly impact_alert_hook!: pulumi.Output<string | undefined>;
    public /*out*/ readonly locked!: pulumi.Output<boolean>;
    public readonly memory!: pulumi.Output<number>;
    public readonly name!: pulumi.Output<string>;
    public /*out*/ readonly network_interfaces!: pulumi.Output<outputs.cloudspace.NetworkInterface[]>;
    public /*out*/ readonly os_accounts!: pulumi.Output<outputs.cloudspace.OsAccount[]>;
    public /*out*/ readonly os_image_name!: pulumi.Output<string>;
    public readonly os_name!: pulumi.Output<string | undefined>;
    public readonly os_type!: pulumi.Output<string | undefined>;
    public readonly private_ip!: pulumi.Output<string | undefined>;
    public readonly snapshot_id!: pulumi.Output<string | undefined>;
    public /*out*/ readonly stack_id!: pulumi.Output<number>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public /*out*/ readonly storage!: pulumi.Output<number>;
    public readonly token!: pulumi.Output<string>;
    public /*out*/ readonly update_time!: pulumi.Output<number>;
    public readonly url!: pulumi.Output<string>;
    public readonly user_data!: pulumi.Output<string | undefined>;
    public readonly vcpus!: pulumi.Output<number>;
    public /*out*/ readonly vm_id!: pulumi.Output<number>;

    /**
     * Create a VirtualMachine resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VirtualMachineArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.cloudspace_id === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloudspace_id'");
            }
            if ((!args || args.customerID === undefined) && !opts.urn) {
                throw new Error("Missing required property 'customerID'");
            }
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if ((!args || args.memory === undefined) && !opts.urn) {
                throw new Error("Missing required property 'memory'");
            }
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            if ((!args || args.token === undefined) && !opts.urn) {
                throw new Error("Missing required property 'token'");
            }
            if ((!args || args.url === undefined) && !opts.urn) {
                throw new Error("Missing required property 'url'");
            }
            if ((!args || args.vcpus === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vcpus'");
            }
            resourceInputs["acronis"] = args ? args.acronis : undefined;
            resourceInputs["all_vm_disks"] = args ? args.all_vm_disks : undefined;
            resourceInputs["boot_disk_id"] = args ? args.boot_disk_id : undefined;
            resourceInputs["boot_type"] = args ? args.boot_type : undefined;
            resourceInputs["cdrom_id"] = args ? args.cdrom_id : undefined;
            resourceInputs["cloudspace_id"] = args ? args.cloudspace_id : undefined;
            resourceInputs["customerID"] = args?.customerID ? pulumi.secret(args.customerID) : undefined;
            resourceInputs["data_disks"] = args ? args.data_disks : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["disk_size"] = args ? args.disk_size : undefined;
            resourceInputs["enable_vm_agent"] = args ? args.enable_vm_agent : undefined;
            resourceInputs["image_id"] = args ? args.image_id : undefined;
            resourceInputs["memory"] = args ? args.memory : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["os_name"] = args ? args.os_name : undefined;
            resourceInputs["os_type"] = args ? args.os_type : undefined;
            resourceInputs["private_ip"] = args ? args.private_ip : undefined;
            resourceInputs["snapshot_id"] = args ? args.snapshot_id : undefined;
            resourceInputs["token"] = args?.token ? pulumi.secret(args.token) : undefined;
            resourceInputs["url"] = args?.url ? pulumi.secret(args.url) : undefined;
            resourceInputs["user_data"] = args ? args.user_data : undefined;
            resourceInputs["vcpus"] = args ? args.vcpus : undefined;
            resourceInputs["agent_status"] = undefined /*out*/;
            resourceInputs["anti_affinity_group_ids"] = undefined /*out*/;
            resourceInputs["appliance"] = undefined /*out*/;
            resourceInputs["cpu_topology"] = undefined /*out*/;
            resourceInputs["cpus_pin_status"] = undefined /*out*/;
            resourceInputs["creation_time"] = undefined /*out*/;
            resourceInputs["disks"] = undefined /*out*/;
            resourceInputs["hostname"] = undefined /*out*/;
            resourceInputs["impact_alert_hook"] = undefined /*out*/;
            resourceInputs["locked"] = undefined /*out*/;
            resourceInputs["network_interfaces"] = undefined /*out*/;
            resourceInputs["os_accounts"] = undefined /*out*/;
            resourceInputs["os_image_name"] = undefined /*out*/;
            resourceInputs["stack_id"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["storage"] = undefined /*out*/;
            resourceInputs["update_time"] = undefined /*out*/;
            resourceInputs["vm_id"] = undefined /*out*/;
        } else {
            resourceInputs["acronis"] = undefined /*out*/;
            resourceInputs["agent_status"] = undefined /*out*/;
            resourceInputs["all_vm_disks"] = undefined /*out*/;
            resourceInputs["anti_affinity_group_ids"] = undefined /*out*/;
            resourceInputs["appliance"] = undefined /*out*/;
            resourceInputs["boot_disk_id"] = undefined /*out*/;
            resourceInputs["boot_type"] = undefined /*out*/;
            resourceInputs["cdrom_id"] = undefined /*out*/;
            resourceInputs["cloudspace_id"] = undefined /*out*/;
            resourceInputs["cpu_topology"] = undefined /*out*/;
            resourceInputs["cpus_pin_status"] = undefined /*out*/;
            resourceInputs["creation_time"] = undefined /*out*/;
            resourceInputs["customerID"] = undefined /*out*/;
            resourceInputs["data_disks"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["disk_size"] = undefined /*out*/;
            resourceInputs["disks"] = undefined /*out*/;
            resourceInputs["enable_vm_agent"] = undefined /*out*/;
            resourceInputs["hostname"] = undefined /*out*/;
            resourceInputs["image_id"] = undefined /*out*/;
            resourceInputs["impact_alert_hook"] = undefined /*out*/;
            resourceInputs["locked"] = undefined /*out*/;
            resourceInputs["memory"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["network_interfaces"] = undefined /*out*/;
            resourceInputs["os_accounts"] = undefined /*out*/;
            resourceInputs["os_image_name"] = undefined /*out*/;
            resourceInputs["os_name"] = undefined /*out*/;
            resourceInputs["os_type"] = undefined /*out*/;
            resourceInputs["private_ip"] = undefined /*out*/;
            resourceInputs["snapshot_id"] = undefined /*out*/;
            resourceInputs["stack_id"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["storage"] = undefined /*out*/;
            resourceInputs["token"] = undefined /*out*/;
            resourceInputs["update_time"] = undefined /*out*/;
            resourceInputs["url"] = undefined /*out*/;
            resourceInputs["user_data"] = undefined /*out*/;
            resourceInputs["vcpus"] = undefined /*out*/;
            resourceInputs["vm_id"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VirtualMachine.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a VirtualMachine resource.
 */
export interface VirtualMachineArgs {
    acronis?: pulumi.Input<boolean>;
    all_vm_disks?: pulumi.Input<boolean>;
    boot_disk_id?: pulumi.Input<number>;
    boot_type?: pulumi.Input<string>;
    cdrom_id?: pulumi.Input<number>;
    cloudspace_id: pulumi.Input<string>;
    customerID: pulumi.Input<string>;
    data_disks?: pulumi.Input<pulumi.Input<number>[]>;
    description: pulumi.Input<string>;
    disk_size?: pulumi.Input<number>;
    enable_vm_agent?: pulumi.Input<boolean>;
    image_id?: pulumi.Input<number>;
    memory: pulumi.Input<number>;
    name: pulumi.Input<string>;
    os_name?: pulumi.Input<string>;
    os_type?: pulumi.Input<string>;
    private_ip?: pulumi.Input<string>;
    snapshot_id?: pulumi.Input<string>;
    token: pulumi.Input<string>;
    url: pulumi.Input<string>;
    user_data?: pulumi.Input<string>;
    vcpus: pulumi.Input<number>;
}
