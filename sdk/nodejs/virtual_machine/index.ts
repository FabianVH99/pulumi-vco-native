// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { VirtualMachineCDArgs } from "./virtualMachineCD";
export type VirtualMachineCD = import("./virtualMachineCD").VirtualMachineCD;
export const VirtualMachineCD: typeof import("./virtualMachineCD").VirtualMachineCD = null as any;
utilities.lazyLoad(exports, ["VirtualMachineCD"], () => require("./virtualMachineCD"));

export { VirtualMachineDiskArgs } from "./virtualMachineDisk";
export type VirtualMachineDisk = import("./virtualMachineDisk").VirtualMachineDisk;
export const VirtualMachineDisk: typeof import("./virtualMachineDisk").VirtualMachineDisk = null as any;
utilities.lazyLoad(exports, ["VirtualMachineDisk"], () => require("./virtualMachineDisk"));

export { VirtualMachineNICArgs } from "./virtualMachineNIC";
export type VirtualMachineNIC = import("./virtualMachineNIC").VirtualMachineNIC;
export const VirtualMachineNIC: typeof import("./virtualMachineNIC").VirtualMachineNIC = null as any;
utilities.lazyLoad(exports, ["VirtualMachineNIC"], () => require("./virtualMachineNIC"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "vco:virtual_machine:VirtualMachineCD":
                return new VirtualMachineCD(name, <any>undefined, { urn })
            case "vco:virtual_machine:VirtualMachineDisk":
                return new VirtualMachineDisk(name, <any>undefined, { urn })
            case "vco:virtual_machine:VirtualMachineNIC":
                return new VirtualMachineNIC(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("vco", "virtual_machine", _module)
