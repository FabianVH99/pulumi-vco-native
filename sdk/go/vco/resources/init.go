// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package resources

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"internal"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "vco:resources:AntiAffinityGroup":
		r = &AntiAffinityGroup{}
	case "vco:resources:AntiAffinityGroupVM":
		r = &AntiAffinityGroupVM{}
	case "vco:resources:Cloudspace":
		r = &Cloudspace{}
	case "vco:resources:ConnectedCloudspace":
		r = &ConnectedCloudspace{}
	case "vco:resources:Disk":
		r = &Disk{}
	case "vco:resources:ExposedDisk":
		r = &ExposedDisk{}
	case "vco:resources:ExternalNetwork":
		r = &ExternalNetwork{}
	case "vco:resources:Host":
		r = &Host{}
	case "vco:resources:LoadBalancer":
		r = &LoadBalancer{}
	case "vco:resources:ObjectSpaceLink":
		r = &ObjectSpaceLink{}
	case "vco:resources:PortForward":
		r = &PortForward{}
	case "vco:resources:ReverseProxy":
		r = &ReverseProxy{}
	case "vco:resources:ServerPool":
		r = &ServerPool{}
	case "vco:resources:VirtualMachine":
		r = &VirtualMachine{}
	case "vco:resources:VirtualMachineCD":
		r = &VirtualMachineCD{}
	case "vco:resources:VirtualMachineDisk":
		r = &VirtualMachineDisk{}
	case "vco:resources:VirtualMachineNIC":
		r = &VirtualMachineNIC{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"vco",
		"resources",
		&module{version},
	)
}
