// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package virtual_machine

import (
	"context"
	"reflect"

	"errors"
	"github.com/fabianv-cloud/pulumi-vco-native/sdk/go/command/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VirtualMachineNIC struct {
	pulumi.CustomResourceState

	Cloudspace_id          pulumi.StringOutput    `pulumi:"cloudspace_id"`
	CustomerID             pulumi.StringOutput    `pulumi:"customerID"`
	Device_name            pulumi.StringOutput    `pulumi:"device_name"`
	External_cloudspace_id pulumi.StringOutput    `pulumi:"external_cloudspace_id"`
	External_network_id    pulumi.IntOutput       `pulumi:"external_network_id"`
	External_network_ip    pulumi.StringPtrOutput `pulumi:"external_network_ip"`
	External_network_type  pulumi.StringPtrOutput `pulumi:"external_network_type"`
	Ip_address             pulumi.StringOutput    `pulumi:"ip_address"`
	Mac_address            pulumi.StringOutput    `pulumi:"mac_address"`
	Model                  pulumi.StringOutput    `pulumi:"model"`
	Network_id             pulumi.IntOutput       `pulumi:"network_id"`
	Nic_type               pulumi.StringOutput    `pulumi:"nic_type"`
	Token                  pulumi.StringOutput    `pulumi:"token"`
	Url                    pulumi.StringOutput    `pulumi:"url"`
	Vm_id                  pulumi.IntOutput       `pulumi:"vm_id"`
}

// NewVirtualMachineNIC registers a new resource with the given unique name, arguments, and options.
func NewVirtualMachineNIC(ctx *pulumi.Context,
	name string, args *VirtualMachineNICArgs, opts ...pulumi.ResourceOption) (*VirtualMachineNIC, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Cloudspace_id == nil {
		return nil, errors.New("invalid value for required argument 'Cloudspace_id'")
	}
	if args.CustomerID == nil {
		return nil, errors.New("invalid value for required argument 'CustomerID'")
	}
	if args.External_network_id == nil {
		return nil, errors.New("invalid value for required argument 'External_network_id'")
	}
	if args.Token == nil {
		return nil, errors.New("invalid value for required argument 'Token'")
	}
	if args.Url == nil {
		return nil, errors.New("invalid value for required argument 'Url'")
	}
	if args.Vm_id == nil {
		return nil, errors.New("invalid value for required argument 'Vm_id'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VirtualMachineNIC
	err := ctx.RegisterResource("vco:virtual_machine:VirtualMachineNIC", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVirtualMachineNIC gets an existing VirtualMachineNIC resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVirtualMachineNIC(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VirtualMachineNICState, opts ...pulumi.ResourceOption) (*VirtualMachineNIC, error) {
	var resource VirtualMachineNIC
	err := ctx.ReadResource("vco:virtual_machine:VirtualMachineNIC", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VirtualMachineNIC resources.
type virtualMachineNICState struct {
}

type VirtualMachineNICState struct {
}

func (VirtualMachineNICState) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualMachineNICState)(nil)).Elem()
}

type virtualMachineNICArgs struct {
	Cloudspace_id          string  `pulumi:"cloudspace_id"`
	CustomerID             string  `pulumi:"customerID"`
	External_cloudspace_id *string `pulumi:"external_cloudspace_id"`
	External_network_id    int     `pulumi:"external_network_id"`
	External_network_ip    *string `pulumi:"external_network_ip"`
	External_network_type  *string `pulumi:"external_network_type"`
	Model                  *string `pulumi:"model"`
	Token                  string  `pulumi:"token"`
	Url                    string  `pulumi:"url"`
	Vm_id                  int     `pulumi:"vm_id"`
}

// The set of arguments for constructing a VirtualMachineNIC resource.
type VirtualMachineNICArgs struct {
	Cloudspace_id          pulumi.StringInput
	CustomerID             pulumi.StringInput
	External_cloudspace_id pulumi.StringPtrInput
	External_network_id    pulumi.IntInput
	External_network_ip    pulumi.StringPtrInput
	External_network_type  pulumi.StringPtrInput
	Model                  pulumi.StringPtrInput
	Token                  pulumi.StringInput
	Url                    pulumi.StringInput
	Vm_id                  pulumi.IntInput
}

func (VirtualMachineNICArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualMachineNICArgs)(nil)).Elem()
}

type VirtualMachineNICInput interface {
	pulumi.Input

	ToVirtualMachineNICOutput() VirtualMachineNICOutput
	ToVirtualMachineNICOutputWithContext(ctx context.Context) VirtualMachineNICOutput
}

func (*VirtualMachineNIC) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineNIC)(nil)).Elem()
}

func (i *VirtualMachineNIC) ToVirtualMachineNICOutput() VirtualMachineNICOutput {
	return i.ToVirtualMachineNICOutputWithContext(context.Background())
}

func (i *VirtualMachineNIC) ToVirtualMachineNICOutputWithContext(ctx context.Context) VirtualMachineNICOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineNICOutput)
}

// VirtualMachineNICArrayInput is an input type that accepts VirtualMachineNICArray and VirtualMachineNICArrayOutput values.
// You can construct a concrete instance of `VirtualMachineNICArrayInput` via:
//
//	VirtualMachineNICArray{ VirtualMachineNICArgs{...} }
type VirtualMachineNICArrayInput interface {
	pulumi.Input

	ToVirtualMachineNICArrayOutput() VirtualMachineNICArrayOutput
	ToVirtualMachineNICArrayOutputWithContext(context.Context) VirtualMachineNICArrayOutput
}

type VirtualMachineNICArray []VirtualMachineNICInput

func (VirtualMachineNICArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VirtualMachineNIC)(nil)).Elem()
}

func (i VirtualMachineNICArray) ToVirtualMachineNICArrayOutput() VirtualMachineNICArrayOutput {
	return i.ToVirtualMachineNICArrayOutputWithContext(context.Background())
}

func (i VirtualMachineNICArray) ToVirtualMachineNICArrayOutputWithContext(ctx context.Context) VirtualMachineNICArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineNICArrayOutput)
}

// VirtualMachineNICMapInput is an input type that accepts VirtualMachineNICMap and VirtualMachineNICMapOutput values.
// You can construct a concrete instance of `VirtualMachineNICMapInput` via:
//
//	VirtualMachineNICMap{ "key": VirtualMachineNICArgs{...} }
type VirtualMachineNICMapInput interface {
	pulumi.Input

	ToVirtualMachineNICMapOutput() VirtualMachineNICMapOutput
	ToVirtualMachineNICMapOutputWithContext(context.Context) VirtualMachineNICMapOutput
}

type VirtualMachineNICMap map[string]VirtualMachineNICInput

func (VirtualMachineNICMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VirtualMachineNIC)(nil)).Elem()
}

func (i VirtualMachineNICMap) ToVirtualMachineNICMapOutput() VirtualMachineNICMapOutput {
	return i.ToVirtualMachineNICMapOutputWithContext(context.Background())
}

func (i VirtualMachineNICMap) ToVirtualMachineNICMapOutputWithContext(ctx context.Context) VirtualMachineNICMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineNICMapOutput)
}

type VirtualMachineNICOutput struct{ *pulumi.OutputState }

func (VirtualMachineNICOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineNIC)(nil)).Elem()
}

func (o VirtualMachineNICOutput) ToVirtualMachineNICOutput() VirtualMachineNICOutput {
	return o
}

func (o VirtualMachineNICOutput) ToVirtualMachineNICOutputWithContext(ctx context.Context) VirtualMachineNICOutput {
	return o
}

func (o VirtualMachineNICOutput) Cloudspace_id() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineNIC) pulumi.StringOutput { return v.Cloudspace_id }).(pulumi.StringOutput)
}

func (o VirtualMachineNICOutput) CustomerID() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineNIC) pulumi.StringOutput { return v.CustomerID }).(pulumi.StringOutput)
}

func (o VirtualMachineNICOutput) Device_name() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineNIC) pulumi.StringOutput { return v.Device_name }).(pulumi.StringOutput)
}

func (o VirtualMachineNICOutput) External_cloudspace_id() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineNIC) pulumi.StringOutput { return v.External_cloudspace_id }).(pulumi.StringOutput)
}

func (o VirtualMachineNICOutput) External_network_id() pulumi.IntOutput {
	return o.ApplyT(func(v *VirtualMachineNIC) pulumi.IntOutput { return v.External_network_id }).(pulumi.IntOutput)
}

func (o VirtualMachineNICOutput) External_network_ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineNIC) pulumi.StringPtrOutput { return v.External_network_ip }).(pulumi.StringPtrOutput)
}

func (o VirtualMachineNICOutput) External_network_type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineNIC) pulumi.StringPtrOutput { return v.External_network_type }).(pulumi.StringPtrOutput)
}

func (o VirtualMachineNICOutput) Ip_address() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineNIC) pulumi.StringOutput { return v.Ip_address }).(pulumi.StringOutput)
}

func (o VirtualMachineNICOutput) Mac_address() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineNIC) pulumi.StringOutput { return v.Mac_address }).(pulumi.StringOutput)
}

func (o VirtualMachineNICOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineNIC) pulumi.StringOutput { return v.Model }).(pulumi.StringOutput)
}

func (o VirtualMachineNICOutput) Network_id() pulumi.IntOutput {
	return o.ApplyT(func(v *VirtualMachineNIC) pulumi.IntOutput { return v.Network_id }).(pulumi.IntOutput)
}

func (o VirtualMachineNICOutput) Nic_type() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineNIC) pulumi.StringOutput { return v.Nic_type }).(pulumi.StringOutput)
}

func (o VirtualMachineNICOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineNIC) pulumi.StringOutput { return v.Token }).(pulumi.StringOutput)
}

func (o VirtualMachineNICOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineNIC) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

func (o VirtualMachineNICOutput) Vm_id() pulumi.IntOutput {
	return o.ApplyT(func(v *VirtualMachineNIC) pulumi.IntOutput { return v.Vm_id }).(pulumi.IntOutput)
}

type VirtualMachineNICArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineNICArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VirtualMachineNIC)(nil)).Elem()
}

func (o VirtualMachineNICArrayOutput) ToVirtualMachineNICArrayOutput() VirtualMachineNICArrayOutput {
	return o
}

func (o VirtualMachineNICArrayOutput) ToVirtualMachineNICArrayOutputWithContext(ctx context.Context) VirtualMachineNICArrayOutput {
	return o
}

func (o VirtualMachineNICArrayOutput) Index(i pulumi.IntInput) VirtualMachineNICOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VirtualMachineNIC {
		return vs[0].([]*VirtualMachineNIC)[vs[1].(int)]
	}).(VirtualMachineNICOutput)
}

type VirtualMachineNICMapOutput struct{ *pulumi.OutputState }

func (VirtualMachineNICMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VirtualMachineNIC)(nil)).Elem()
}

func (o VirtualMachineNICMapOutput) ToVirtualMachineNICMapOutput() VirtualMachineNICMapOutput {
	return o
}

func (o VirtualMachineNICMapOutput) ToVirtualMachineNICMapOutputWithContext(ctx context.Context) VirtualMachineNICMapOutput {
	return o
}

func (o VirtualMachineNICMapOutput) MapIndex(k pulumi.StringInput) VirtualMachineNICOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VirtualMachineNIC {
		return vs[0].(map[string]*VirtualMachineNIC)[vs[1].(string)]
	}).(VirtualMachineNICOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineNICInput)(nil)).Elem(), &VirtualMachineNIC{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineNICArrayInput)(nil)).Elem(), VirtualMachineNICArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineNICMapInput)(nil)).Elem(), VirtualMachineNICMap{})
	pulumi.RegisterOutputType(VirtualMachineNICOutput{})
	pulumi.RegisterOutputType(VirtualMachineNICArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineNICMapOutput{})
}
