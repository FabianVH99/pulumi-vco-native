// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudspace

import (
	"context"
	"reflect"

	"errors"
	"github.com/fabianv-cloud/pulumi-vco-native/sdk/go/command/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ExternalNetwork struct {
	pulumi.CustomResourceState

	Cloudspace_id         pulumi.StringOutput `pulumi:"cloudspace_id"`
	CustomerID            pulumi.StringOutput `pulumi:"customerID"`
	External_network_id   pulumi.StringOutput `pulumi:"external_network_id"`
	External_network_ip   pulumi.StringOutput `pulumi:"external_network_ip"`
	External_network_type pulumi.StringOutput `pulumi:"external_network_type"`
	Metric                pulumi.IntOutput    `pulumi:"metric"`
	Token                 pulumi.StringOutput `pulumi:"token"`
	Url                   pulumi.StringOutput `pulumi:"url"`
}

// NewExternalNetwork registers a new resource with the given unique name, arguments, and options.
func NewExternalNetwork(ctx *pulumi.Context,
	name string, args *ExternalNetworkArgs, opts ...pulumi.ResourceOption) (*ExternalNetwork, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Cloudspace_id == nil {
		return nil, errors.New("invalid value for required argument 'Cloudspace_id'")
	}
	if args.CustomerID == nil {
		return nil, errors.New("invalid value for required argument 'CustomerID'")
	}
	if args.External_network_id == nil {
		return nil, errors.New("invalid value for required argument 'External_network_id'")
	}
	if args.External_network_ip == nil {
		return nil, errors.New("invalid value for required argument 'External_network_ip'")
	}
	if args.External_network_type == nil {
		return nil, errors.New("invalid value for required argument 'External_network_type'")
	}
	if args.Metric == nil {
		return nil, errors.New("invalid value for required argument 'Metric'")
	}
	if args.Token == nil {
		return nil, errors.New("invalid value for required argument 'Token'")
	}
	if args.Url == nil {
		return nil, errors.New("invalid value for required argument 'Url'")
	}
	if args.CustomerID != nil {
		args.CustomerID = pulumi.ToSecret(args.CustomerID).(pulumi.StringInput)
	}
	if args.Token != nil {
		args.Token = pulumi.ToSecret(args.Token).(pulumi.StringInput)
	}
	if args.Url != nil {
		args.Url = pulumi.ToSecret(args.Url).(pulumi.StringInput)
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ExternalNetwork
	err := ctx.RegisterResource("vco:cloudspace:ExternalNetwork", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExternalNetwork gets an existing ExternalNetwork resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExternalNetwork(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExternalNetworkState, opts ...pulumi.ResourceOption) (*ExternalNetwork, error) {
	var resource ExternalNetwork
	err := ctx.ReadResource("vco:cloudspace:ExternalNetwork", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExternalNetwork resources.
type externalNetworkState struct {
}

type ExternalNetworkState struct {
}

func (ExternalNetworkState) ElementType() reflect.Type {
	return reflect.TypeOf((*externalNetworkState)(nil)).Elem()
}

type externalNetworkArgs struct {
	Cloudspace_id         string `pulumi:"cloudspace_id"`
	CustomerID            string `pulumi:"customerID"`
	External_network_id   string `pulumi:"external_network_id"`
	External_network_ip   string `pulumi:"external_network_ip"`
	External_network_type string `pulumi:"external_network_type"`
	Metric                int    `pulumi:"metric"`
	Token                 string `pulumi:"token"`
	Url                   string `pulumi:"url"`
}

// The set of arguments for constructing a ExternalNetwork resource.
type ExternalNetworkArgs struct {
	Cloudspace_id         pulumi.StringInput
	CustomerID            pulumi.StringInput
	External_network_id   pulumi.StringInput
	External_network_ip   pulumi.StringInput
	External_network_type pulumi.StringInput
	Metric                pulumi.IntInput
	Token                 pulumi.StringInput
	Url                   pulumi.StringInput
}

func (ExternalNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*externalNetworkArgs)(nil)).Elem()
}

type ExternalNetworkInput interface {
	pulumi.Input

	ToExternalNetworkOutput() ExternalNetworkOutput
	ToExternalNetworkOutputWithContext(ctx context.Context) ExternalNetworkOutput
}

func (*ExternalNetwork) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalNetwork)(nil)).Elem()
}

func (i *ExternalNetwork) ToExternalNetworkOutput() ExternalNetworkOutput {
	return i.ToExternalNetworkOutputWithContext(context.Background())
}

func (i *ExternalNetwork) ToExternalNetworkOutputWithContext(ctx context.Context) ExternalNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalNetworkOutput)
}

// ExternalNetworkArrayInput is an input type that accepts ExternalNetworkArray and ExternalNetworkArrayOutput values.
// You can construct a concrete instance of `ExternalNetworkArrayInput` via:
//
//	ExternalNetworkArray{ ExternalNetworkArgs{...} }
type ExternalNetworkArrayInput interface {
	pulumi.Input

	ToExternalNetworkArrayOutput() ExternalNetworkArrayOutput
	ToExternalNetworkArrayOutputWithContext(context.Context) ExternalNetworkArrayOutput
}

type ExternalNetworkArray []ExternalNetworkInput

func (ExternalNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExternalNetwork)(nil)).Elem()
}

func (i ExternalNetworkArray) ToExternalNetworkArrayOutput() ExternalNetworkArrayOutput {
	return i.ToExternalNetworkArrayOutputWithContext(context.Background())
}

func (i ExternalNetworkArray) ToExternalNetworkArrayOutputWithContext(ctx context.Context) ExternalNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalNetworkArrayOutput)
}

// ExternalNetworkMapInput is an input type that accepts ExternalNetworkMap and ExternalNetworkMapOutput values.
// You can construct a concrete instance of `ExternalNetworkMapInput` via:
//
//	ExternalNetworkMap{ "key": ExternalNetworkArgs{...} }
type ExternalNetworkMapInput interface {
	pulumi.Input

	ToExternalNetworkMapOutput() ExternalNetworkMapOutput
	ToExternalNetworkMapOutputWithContext(context.Context) ExternalNetworkMapOutput
}

type ExternalNetworkMap map[string]ExternalNetworkInput

func (ExternalNetworkMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExternalNetwork)(nil)).Elem()
}

func (i ExternalNetworkMap) ToExternalNetworkMapOutput() ExternalNetworkMapOutput {
	return i.ToExternalNetworkMapOutputWithContext(context.Background())
}

func (i ExternalNetworkMap) ToExternalNetworkMapOutputWithContext(ctx context.Context) ExternalNetworkMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalNetworkMapOutput)
}

type ExternalNetworkOutput struct{ *pulumi.OutputState }

func (ExternalNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalNetwork)(nil)).Elem()
}

func (o ExternalNetworkOutput) ToExternalNetworkOutput() ExternalNetworkOutput {
	return o
}

func (o ExternalNetworkOutput) ToExternalNetworkOutputWithContext(ctx context.Context) ExternalNetworkOutput {
	return o
}

func (o ExternalNetworkOutput) Cloudspace_id() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalNetwork) pulumi.StringOutput { return v.Cloudspace_id }).(pulumi.StringOutput)
}

func (o ExternalNetworkOutput) CustomerID() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalNetwork) pulumi.StringOutput { return v.CustomerID }).(pulumi.StringOutput)
}

func (o ExternalNetworkOutput) External_network_id() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalNetwork) pulumi.StringOutput { return v.External_network_id }).(pulumi.StringOutput)
}

func (o ExternalNetworkOutput) External_network_ip() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalNetwork) pulumi.StringOutput { return v.External_network_ip }).(pulumi.StringOutput)
}

func (o ExternalNetworkOutput) External_network_type() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalNetwork) pulumi.StringOutput { return v.External_network_type }).(pulumi.StringOutput)
}

func (o ExternalNetworkOutput) Metric() pulumi.IntOutput {
	return o.ApplyT(func(v *ExternalNetwork) pulumi.IntOutput { return v.Metric }).(pulumi.IntOutput)
}

func (o ExternalNetworkOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalNetwork) pulumi.StringOutput { return v.Token }).(pulumi.StringOutput)
}

func (o ExternalNetworkOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalNetwork) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

type ExternalNetworkArrayOutput struct{ *pulumi.OutputState }

func (ExternalNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExternalNetwork)(nil)).Elem()
}

func (o ExternalNetworkArrayOutput) ToExternalNetworkArrayOutput() ExternalNetworkArrayOutput {
	return o
}

func (o ExternalNetworkArrayOutput) ToExternalNetworkArrayOutputWithContext(ctx context.Context) ExternalNetworkArrayOutput {
	return o
}

func (o ExternalNetworkArrayOutput) Index(i pulumi.IntInput) ExternalNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ExternalNetwork {
		return vs[0].([]*ExternalNetwork)[vs[1].(int)]
	}).(ExternalNetworkOutput)
}

type ExternalNetworkMapOutput struct{ *pulumi.OutputState }

func (ExternalNetworkMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExternalNetwork)(nil)).Elem()
}

func (o ExternalNetworkMapOutput) ToExternalNetworkMapOutput() ExternalNetworkMapOutput {
	return o
}

func (o ExternalNetworkMapOutput) ToExternalNetworkMapOutputWithContext(ctx context.Context) ExternalNetworkMapOutput {
	return o
}

func (o ExternalNetworkMapOutput) MapIndex(k pulumi.StringInput) ExternalNetworkOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ExternalNetwork {
		return vs[0].(map[string]*ExternalNetwork)[vs[1].(string)]
	}).(ExternalNetworkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalNetworkInput)(nil)).Elem(), &ExternalNetwork{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalNetworkArrayInput)(nil)).Elem(), ExternalNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalNetworkMapInput)(nil)).Elem(), ExternalNetworkMap{})
	pulumi.RegisterOutputType(ExternalNetworkOutput{})
	pulumi.RegisterOutputType(ExternalNetworkArrayOutput{})
	pulumi.RegisterOutputType(ExternalNetworkMapOutput{})
}
