// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package base

import (
	"context"
	"reflect"

	"errors"
	"github.com/fabianv-cloud/pulumi-vco-native/sdk/go/command/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Cloudspace struct {
	pulumi.CustomResourceState

	Cdrom_id             pulumi.IntPtrOutput    `pulumi:"cdrom_id"`
	Cloudspace_id        pulumi.StringOutput    `pulumi:"cloudspace_id"`
	Cloudspace_mode      pulumi.StringOutput    `pulumi:"cloudspace_mode"`
	Creation_time        pulumi.IntOutput       `pulumi:"creation_time"`
	CustomerID           pulumi.StringOutput    `pulumi:"customerID"`
	Disk_size            pulumi.IntPtrOutput    `pulumi:"disk_size"`
	External_network_id  pulumi.IntOutput       `pulumi:"external_network_id"`
	External_network_ip  pulumi.StringOutput    `pulumi:"external_network_ip"`
	Host                 pulumi.StringPtrOutput `pulumi:"host"`
	Image_id             pulumi.IntPtrOutput    `pulumi:"image_id"`
	Local_domain         pulumi.StringOutput    `pulumi:"local_domain"`
	Location             pulumi.StringOutput    `pulumi:"location"`
	Memory               pulumi.IntPtrOutput    `pulumi:"memory"`
	Memory_quota         pulumi.IntPtrOutput    `pulumi:"memory_quota"`
	Name                 pulumi.StringOutput    `pulumi:"name"`
	Parent_cloudspace_id pulumi.StringPtrOutput `pulumi:"parent_cloudspace_id"`
	Private              pulumi.BoolOutput      `pulumi:"private"`
	Private_network      pulumi.StringOutput    `pulumi:"private_network"`
	Public_ip_quota      pulumi.IntPtrOutput    `pulumi:"public_ip_quota"`
	Router_type          pulumi.StringOutput    `pulumi:"router_type"`
	Status               pulumi.StringOutput    `pulumi:"status"`
	Token                pulumi.StringOutput    `pulumi:"token"`
	Type                 pulumi.StringPtrOutput `pulumi:"type"`
	Update_time          pulumi.IntOutput       `pulumi:"update_time"`
	Url                  pulumi.StringOutput    `pulumi:"url"`
	Vcpu_quota           pulumi.IntPtrOutput    `pulumi:"vcpu_quota"`
	Vcpus                pulumi.IntPtrOutput    `pulumi:"vcpus"`
	Vdisk_space_quota    pulumi.IntPtrOutput    `pulumi:"vdisk_space_quota"`
}

// NewCloudspace registers a new resource with the given unique name, arguments, and options.
func NewCloudspace(ctx *pulumi.Context,
	name string, args *CloudspaceArgs, opts ...pulumi.ResourceOption) (*Cloudspace, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CustomerID == nil {
		return nil, errors.New("invalid value for required argument 'CustomerID'")
	}
	if args.External_network_id == nil {
		return nil, errors.New("invalid value for required argument 'External_network_id'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.Private == nil {
		return nil, errors.New("invalid value for required argument 'Private'")
	}
	if args.Private_network == nil {
		return nil, errors.New("invalid value for required argument 'Private_network'")
	}
	if args.Token == nil {
		return nil, errors.New("invalid value for required argument 'Token'")
	}
	if args.Url == nil {
		return nil, errors.New("invalid value for required argument 'Url'")
	}
	if args.CustomerID != nil {
		args.CustomerID = pulumi.ToSecret(args.CustomerID).(pulumi.StringInput)
	}
	if args.Token != nil {
		args.Token = pulumi.ToSecret(args.Token).(pulumi.StringInput)
	}
	if args.Url != nil {
		args.Url = pulumi.ToSecret(args.Url).(pulumi.StringInput)
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Cloudspace
	err := ctx.RegisterResource("vco:base:Cloudspace", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudspace gets an existing Cloudspace resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudspace(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudspaceState, opts ...pulumi.ResourceOption) (*Cloudspace, error) {
	var resource Cloudspace
	err := ctx.ReadResource("vco:base:Cloudspace", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Cloudspace resources.
type cloudspaceState struct {
}

type CloudspaceState struct {
}

func (CloudspaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudspaceState)(nil)).Elem()
}

type cloudspaceArgs struct {
	Cdrom_id             *int    `pulumi:"cdrom_id"`
	CustomerID           string  `pulumi:"customerID"`
	Disk_size            *int    `pulumi:"disk_size"`
	External_network_id  int     `pulumi:"external_network_id"`
	Host                 *string `pulumi:"host"`
	Image_id             *int    `pulumi:"image_id"`
	Local_domain         *string `pulumi:"local_domain"`
	Location             string  `pulumi:"location"`
	Memory               *int    `pulumi:"memory"`
	Memory_quota         *int    `pulumi:"memory_quota"`
	Name                 string  `pulumi:"name"`
	Parent_cloudspace_id *string `pulumi:"parent_cloudspace_id"`
	Private              bool    `pulumi:"private"`
	Private_network      string  `pulumi:"private_network"`
	Public_ip_quota      *int    `pulumi:"public_ip_quota"`
	Token                string  `pulumi:"token"`
	Type                 *string `pulumi:"type"`
	Url                  string  `pulumi:"url"`
	Vcpu_quota           *int    `pulumi:"vcpu_quota"`
	Vcpus                *int    `pulumi:"vcpus"`
	Vdisk_space_quota    *int    `pulumi:"vdisk_space_quota"`
}

// The set of arguments for constructing a Cloudspace resource.
type CloudspaceArgs struct {
	Cdrom_id             pulumi.IntPtrInput
	CustomerID           pulumi.StringInput
	Disk_size            pulumi.IntPtrInput
	External_network_id  pulumi.IntInput
	Host                 pulumi.StringPtrInput
	Image_id             pulumi.IntPtrInput
	Local_domain         pulumi.StringPtrInput
	Location             pulumi.StringInput
	Memory               pulumi.IntPtrInput
	Memory_quota         pulumi.IntPtrInput
	Name                 pulumi.StringInput
	Parent_cloudspace_id pulumi.StringPtrInput
	Private              pulumi.BoolInput
	Private_network      pulumi.StringInput
	Public_ip_quota      pulumi.IntPtrInput
	Token                pulumi.StringInput
	Type                 pulumi.StringPtrInput
	Url                  pulumi.StringInput
	Vcpu_quota           pulumi.IntPtrInput
	Vcpus                pulumi.IntPtrInput
	Vdisk_space_quota    pulumi.IntPtrInput
}

func (CloudspaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudspaceArgs)(nil)).Elem()
}

type CloudspaceInput interface {
	pulumi.Input

	ToCloudspaceOutput() CloudspaceOutput
	ToCloudspaceOutputWithContext(ctx context.Context) CloudspaceOutput
}

func (*Cloudspace) ElementType() reflect.Type {
	return reflect.TypeOf((**Cloudspace)(nil)).Elem()
}

func (i *Cloudspace) ToCloudspaceOutput() CloudspaceOutput {
	return i.ToCloudspaceOutputWithContext(context.Background())
}

func (i *Cloudspace) ToCloudspaceOutputWithContext(ctx context.Context) CloudspaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudspaceOutput)
}

// CloudspaceArrayInput is an input type that accepts CloudspaceArray and CloudspaceArrayOutput values.
// You can construct a concrete instance of `CloudspaceArrayInput` via:
//
//	CloudspaceArray{ CloudspaceArgs{...} }
type CloudspaceArrayInput interface {
	pulumi.Input

	ToCloudspaceArrayOutput() CloudspaceArrayOutput
	ToCloudspaceArrayOutputWithContext(context.Context) CloudspaceArrayOutput
}

type CloudspaceArray []CloudspaceInput

func (CloudspaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Cloudspace)(nil)).Elem()
}

func (i CloudspaceArray) ToCloudspaceArrayOutput() CloudspaceArrayOutput {
	return i.ToCloudspaceArrayOutputWithContext(context.Background())
}

func (i CloudspaceArray) ToCloudspaceArrayOutputWithContext(ctx context.Context) CloudspaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudspaceArrayOutput)
}

// CloudspaceMapInput is an input type that accepts CloudspaceMap and CloudspaceMapOutput values.
// You can construct a concrete instance of `CloudspaceMapInput` via:
//
//	CloudspaceMap{ "key": CloudspaceArgs{...} }
type CloudspaceMapInput interface {
	pulumi.Input

	ToCloudspaceMapOutput() CloudspaceMapOutput
	ToCloudspaceMapOutputWithContext(context.Context) CloudspaceMapOutput
}

type CloudspaceMap map[string]CloudspaceInput

func (CloudspaceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Cloudspace)(nil)).Elem()
}

func (i CloudspaceMap) ToCloudspaceMapOutput() CloudspaceMapOutput {
	return i.ToCloudspaceMapOutputWithContext(context.Background())
}

func (i CloudspaceMap) ToCloudspaceMapOutputWithContext(ctx context.Context) CloudspaceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudspaceMapOutput)
}

type CloudspaceOutput struct{ *pulumi.OutputState }

func (CloudspaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Cloudspace)(nil)).Elem()
}

func (o CloudspaceOutput) ToCloudspaceOutput() CloudspaceOutput {
	return o
}

func (o CloudspaceOutput) ToCloudspaceOutputWithContext(ctx context.Context) CloudspaceOutput {
	return o
}

func (o CloudspaceOutput) Cdrom_id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Cloudspace) pulumi.IntPtrOutput { return v.Cdrom_id }).(pulumi.IntPtrOutput)
}

func (o CloudspaceOutput) Cloudspace_id() pulumi.StringOutput {
	return o.ApplyT(func(v *Cloudspace) pulumi.StringOutput { return v.Cloudspace_id }).(pulumi.StringOutput)
}

func (o CloudspaceOutput) Cloudspace_mode() pulumi.StringOutput {
	return o.ApplyT(func(v *Cloudspace) pulumi.StringOutput { return v.Cloudspace_mode }).(pulumi.StringOutput)
}

func (o CloudspaceOutput) Creation_time() pulumi.IntOutput {
	return o.ApplyT(func(v *Cloudspace) pulumi.IntOutput { return v.Creation_time }).(pulumi.IntOutput)
}

func (o CloudspaceOutput) CustomerID() pulumi.StringOutput {
	return o.ApplyT(func(v *Cloudspace) pulumi.StringOutput { return v.CustomerID }).(pulumi.StringOutput)
}

func (o CloudspaceOutput) Disk_size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Cloudspace) pulumi.IntPtrOutput { return v.Disk_size }).(pulumi.IntPtrOutput)
}

func (o CloudspaceOutput) External_network_id() pulumi.IntOutput {
	return o.ApplyT(func(v *Cloudspace) pulumi.IntOutput { return v.External_network_id }).(pulumi.IntOutput)
}

func (o CloudspaceOutput) External_network_ip() pulumi.StringOutput {
	return o.ApplyT(func(v *Cloudspace) pulumi.StringOutput { return v.External_network_ip }).(pulumi.StringOutput)
}

func (o CloudspaceOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cloudspace) pulumi.StringPtrOutput { return v.Host }).(pulumi.StringPtrOutput)
}

func (o CloudspaceOutput) Image_id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Cloudspace) pulumi.IntPtrOutput { return v.Image_id }).(pulumi.IntPtrOutput)
}

func (o CloudspaceOutput) Local_domain() pulumi.StringOutput {
	return o.ApplyT(func(v *Cloudspace) pulumi.StringOutput { return v.Local_domain }).(pulumi.StringOutput)
}

func (o CloudspaceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Cloudspace) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o CloudspaceOutput) Memory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Cloudspace) pulumi.IntPtrOutput { return v.Memory }).(pulumi.IntPtrOutput)
}

func (o CloudspaceOutput) Memory_quota() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Cloudspace) pulumi.IntPtrOutput { return v.Memory_quota }).(pulumi.IntPtrOutput)
}

func (o CloudspaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Cloudspace) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o CloudspaceOutput) Parent_cloudspace_id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cloudspace) pulumi.StringPtrOutput { return v.Parent_cloudspace_id }).(pulumi.StringPtrOutput)
}

func (o CloudspaceOutput) Private() pulumi.BoolOutput {
	return o.ApplyT(func(v *Cloudspace) pulumi.BoolOutput { return v.Private }).(pulumi.BoolOutput)
}

func (o CloudspaceOutput) Private_network() pulumi.StringOutput {
	return o.ApplyT(func(v *Cloudspace) pulumi.StringOutput { return v.Private_network }).(pulumi.StringOutput)
}

func (o CloudspaceOutput) Public_ip_quota() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Cloudspace) pulumi.IntPtrOutput { return v.Public_ip_quota }).(pulumi.IntPtrOutput)
}

func (o CloudspaceOutput) Router_type() pulumi.StringOutput {
	return o.ApplyT(func(v *Cloudspace) pulumi.StringOutput { return v.Router_type }).(pulumi.StringOutput)
}

func (o CloudspaceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Cloudspace) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o CloudspaceOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v *Cloudspace) pulumi.StringOutput { return v.Token }).(pulumi.StringOutput)
}

func (o CloudspaceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cloudspace) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

func (o CloudspaceOutput) Update_time() pulumi.IntOutput {
	return o.ApplyT(func(v *Cloudspace) pulumi.IntOutput { return v.Update_time }).(pulumi.IntOutput)
}

func (o CloudspaceOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *Cloudspace) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

func (o CloudspaceOutput) Vcpu_quota() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Cloudspace) pulumi.IntPtrOutput { return v.Vcpu_quota }).(pulumi.IntPtrOutput)
}

func (o CloudspaceOutput) Vcpus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Cloudspace) pulumi.IntPtrOutput { return v.Vcpus }).(pulumi.IntPtrOutput)
}

func (o CloudspaceOutput) Vdisk_space_quota() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Cloudspace) pulumi.IntPtrOutput { return v.Vdisk_space_quota }).(pulumi.IntPtrOutput)
}

type CloudspaceArrayOutput struct{ *pulumi.OutputState }

func (CloudspaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Cloudspace)(nil)).Elem()
}

func (o CloudspaceArrayOutput) ToCloudspaceArrayOutput() CloudspaceArrayOutput {
	return o
}

func (o CloudspaceArrayOutput) ToCloudspaceArrayOutputWithContext(ctx context.Context) CloudspaceArrayOutput {
	return o
}

func (o CloudspaceArrayOutput) Index(i pulumi.IntInput) CloudspaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Cloudspace {
		return vs[0].([]*Cloudspace)[vs[1].(int)]
	}).(CloudspaceOutput)
}

type CloudspaceMapOutput struct{ *pulumi.OutputState }

func (CloudspaceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Cloudspace)(nil)).Elem()
}

func (o CloudspaceMapOutput) ToCloudspaceMapOutput() CloudspaceMapOutput {
	return o
}

func (o CloudspaceMapOutput) ToCloudspaceMapOutputWithContext(ctx context.Context) CloudspaceMapOutput {
	return o
}

func (o CloudspaceMapOutput) MapIndex(k pulumi.StringInput) CloudspaceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Cloudspace {
		return vs[0].(map[string]*Cloudspace)[vs[1].(string)]
	}).(CloudspaceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudspaceInput)(nil)).Elem(), &Cloudspace{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudspaceArrayInput)(nil)).Elem(), CloudspaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudspaceMapInput)(nil)).Elem(), CloudspaceMap{})
	pulumi.RegisterOutputType(CloudspaceOutput{})
	pulumi.RegisterOutputType(CloudspaceArrayOutput{})
	pulumi.RegisterOutputType(CloudspaceMapOutput{})
}
